programa ejercicio2

procesos
  proceso depositarFloresPerdedor(ES flores: numero; E avInicial: numero; E caInicial: numero)
  comenzar
    BloquearEsquina(1,50)
    Pos(1,50)
    derecha
    {Bloqueo solo esquina inicial y recorren uno a la vez | Bloqueo esquina a esquina y todos recorren al mismo tiempo}
    mientras ((flores > 0) && (PosAv < 100))
      depositarFlor
      flor := flor - 1
      mover
    Informar('Avenida:',PosAv)
    Pos(avInicial,caInicial)
    LiberarEsquina(1,50)
  fin
  
  proceso depositarPapelesPerdedor(ES papeles: numero; E avInicial: numero; E caInicial: numero)
  comenzar
    BloquearEsquina(1,50)
    Pos(1,50)
    derecha
    {Bloqueo solo esquina inicial y recorren uno a la vez | Bloqueo esquina a esquina y todos recorren al mismo tiempo}
    mientras ((papeles > 0) && (PosAv < 100))
      depositarPapel
      papeles := papeles - 1
      mover
    Informar('Avenida:',PosAv)
    Pos(avInicial,caInicial)
    LiberarEsquina(1,50)
  fin

  
  
  proceso izquierda
  comenzar
    repetir 3
      derecha
  fin
  
  proceso realizarEscalon(ES flores: numero)
  variables
    alto, ancho: numero
  comenzar
    alto:= 3
    repetir alto
      mientras (HayFlorEnLaEsquina)
        tomarFlor
        flor:= flor + 1
      mover
    derecha
    Random(ancho, 3, 5)
    repetir ancho
      mientras (HayFlorEnLaEsquina)
        tomarFlor
        flores:= flores + 1
      mover
    izquierda
  fin

areas
  AreaJuez: AreaP(1, 1, 1, 1)
  
  AreaCVerde: AreaP(5, 1, 5, 49)
  AreaCAmarillo: AreaP(10, 1, 10, 49)
  AreaCRosa: AreaP(15, 1, 15, 49) 
  AreaCNegro: AreaP(20, 1, 20, 49)

  {Consideramos peores casos de ultimos para limites}
  AreaEscaladores: AreaC(5, 51, 55, 66)
  
  {Deposito de los ganadores}
  AreaDeposito: AreaPC(100, 1, 100, 1)
  
  {Deposito de los perdedores}
  AreaRestos: AreaPC(1, 50, 100, 50)
  
robots
  robot rCorredor 
  variables
    id, papeles, alto, avInicial, caInicial: numero
    ganador: boolean
  comenzar
    RecibirMensaje(id, juez)
    avInicial := PosAv
    caInicial := PosCa
    
    mientras (posCa < 50)
      mientras (HayPapelEnLaEsquina)
        tomarPapel
        papeles:= papeles + 1

      Random(alto, 1, 5)
      si ((PosCa + alto) < 50)
        Pos(PosAv, PosCa + alto)
      sino
        Pos(PosAv, 50) {si o si termina en PosCa = 50)

    {Avisa a compaï¿½ero que termino}
    si (id = 1)
      EnviarMensaje(corredorVerde, 5)
    sino
      si (id = 2)
        EnviarMensaje(corredorAmarillo, 10)
      sino
        si (id = 3)
          EnviarMensaje(corredorRosa, 15)
        sino
          EnviarMensaje(corredorNegro, 20)
          
        
    {ENVIO DE MENSAJES DESDE LA ESQUINA 50}
    EnviarMensaje(juez, id)
    EnviarMensaje(juez, papeles)
    
    {Juez retorna un boolean, V = proceso de ganador, F = proceso de perdedor}
    RecibirMensaje(ganador, juez)
    si (ganador)
      BloquearEsquina(100,1)
      Pos(100,1)
      mientras (papeles > 0)
        depositarPapel
        papeles := papeles - 1
      Pos(avInicial,caInicial)
      LiberarEsquina(100,1) 
    sino
      depositarPapelesPerdedor(papeles)

    
    

  fin
  
  robot rEscalador 
  variables
    id, av, ancho, flores,caInicial,avInicial: numero
    ganador: boolean
  comenzar 
    avInicial := PosAv
    caInicial := PosCa

    {verde = 1, amarillo = 2, rosa = 3, negro = 4}
    RecibirMensaje(id, juez) {Recibe identificador del juez}
    si (id == 5)  
      RecibirMensaje(av, corredorVerde) 
    sino
      si (id == 6)
        RecibirMensaje(av, corredorAmarillo)
      sino
        si (id == 7) 
          RecibirMensaje(av, corredorRosa)
        sino
          RecibirMensaje(av, corredorNegro)
          
    {Recorrido propio de escaladores}
    repetir 5
      realizarEscalon(flores)
       
    
    {Comunicar Flores Juntadas}
    EnviarMensaje(juez, id)
    EnviarMensaje(juez, flores)
    
    {Juez retorna un boolean, V = proceso de ganador, F = proceso de perdedor}
    RecibirMensaje(ganador, juez)
    si (ganador)
      BloquearEsquina(100,1)
      Pos(100,1)
      mientras (flores > 0)
        depositarFlor
        flores := flores - 1
      Pos(avInicial,caInicial)
      LiberarEsquina(100,1)
      
    sino
      depositarFloresPerdedor(flores)
     
  fin
  
  robot rJuez
  variables
    maxFlores, maxFloresId, maxPapeles, maxPapelesId, id, flores, papeles: numero
  comenzar
  {Envio de identificadores}
    EnviarMensaje(corredorVerde,1)
    EnviarMensaje(corredorAmarillo,2)
    EnviarMensaje(corredorRosa,3)
    EnviarMensaje(corredorNegro,4)
    
    EnviarMensaje(escaladorVerde,5)
    EnviarMensaje(escaladorAmarillo,6)
    EnviarMensaje(escaladorRosa,7)
    EnviarMensaje(escaladorNegro,8)
    
    {Procesamiento de flores y papeles)
    repetir 8
      RecibirMensaje (id, *)
      si (id = 1) 
        RecibirMensaje(papeles, corredorVerde)
        si (papeles > maxPapeles) 
          maxPapeles:= papeles
          maxPapelesId:= id
      sino 
        si (id = 2) 
          RecibirMensaje(papeles, corredorAmarillo)
          si (papeles > maxPapeles) 
          maxPapeles:= papeles
          maxPapelesId:= id

        sino
          si (id = 3)
            RecibirMensaje(papeles, corredorRosa)
            si (papeles > maxPapeles) 
              maxPapeles:= papeles
              maxPapelesId:= id
          sino
            si (id = 4)
              RecibirMensaje(papeles, corredorNegro)
              si (papeles > maxPapeles) 
                maxPapeles:= papeles
                maxPapelesId:= id



    

  fin




variables
  corredorVerde: rCorredor 
  corredorAmarillo: rCorredor 
  corredorRosa: rCorredor 
  corredorNegro: rCorredor 
  escaladorVerde: rEscalador 
  escaladorAmarillo: rEscalador 
  escaladorRosa: rEscalador 
  escaladorNegro: rEscalador
  {juez: rJuez}
  
comenzar 

  {Iniciar(juez, 1, 1)}
  
  Iniciar(corredorVerde, 5, 1)
  Iniciar(corredorAmarillo, 10, 1)
  Iniciar(corredorRosa, 15, 1)
  Iniciar(corredorNegro, 20, 1)
  
  Iniciar(escaladorVerde, 5, 1)
  Iniciar(escaladorAmarillo, 10, 1)
  Iniciar(escaladorRosa, 15, 1)
  Iniciar(escaladorNegro, 20, 1)

fin
