programa ejercicio2

procesos
  proceso depositarFloresPerdedor(ES flores: numero; E avInicial: numero; E caInicial: numero)
  comenzar
    BloquearEsquina(1,50)
    Pos(1,50)
    derecha

    mientras ((flores > 0) & (PosAv < 100))
      depositarFlor
      flores := flores - 1
      mover
    Informar('Avenida',PosAv)
    Pos(avInicial,caInicial)
    LiberarEsquina(1,50)
  fin
  
  proceso depositarFloresPerdedorV2(ES flores: numero; E avInicial: numero; E caInicial: numero)
  variables
    avUlt,caUlt: numero
  comenzar
    BloquearEsquina(1,50)
    Pos(1,50)
    derecha
    
    mientras ((flores > 0) & (PosAv < 100))
      BloquearEsquina(PosAv + 1,PosCa)
      depositarFlor
      flores:= flores - 1
      mover
      LiberarEsquina(PosAv - 1,PosCa)
    avUlt:= PosAv
    caUlt:= PosCa
    Informar('Avenida', PosAv)
    Pos(avInicial,caInicial)
    LiberarEsquina(avUlt,caUlt)
  fin
  
  
  proceso depositarPapelesPerdedor(ES papeles: numero; E avInicial: numero; E caInicial: numero)
  comenzar
    BloquearEsquina(1,50)
    Pos(1,50)
    derecha

    mientras ((papeles > 0) & (PosAv < 100))
      depositarPapel
      papeles := papeles - 1
      mover
    Informar('Avenida',PosAv)
    Pos(avInicial,caInicial)
    LiberarEsquina(1,50)
  fin

  proceso izquierda
  comenzar
    repetir 3
      derecha
  fin
  
  proceso depositarPapelesPerdedorV2(ES papeles: numero; E avInicial: numero; E caInicial: numero)
  variables
    avUlt,caUlt: numero
  comenzar
    BloquearEsquina(1,50)
    Pos(1,50)
    derecha
    
    mientras ((papeles > 0) & (PosAv < 100))
      BloquearEsquina(PosAv + 1,PosCa)
      depositarPapel
      papeles:= papeles - 1
      mover
      LiberarEsquina(PosAv - 1,PosCa)
    avUlt:= PosAv
    caUlt:= PosCa
    Informar('Avenida', PosAv)
    Pos(avInicial,caInicial)
    LiberarEsquina(avUlt,caUlt)
  fin

  
  proceso realizarEscalon(ES flores: numero; ES avUlt: numero; ES caUlt: numero)
  variables
    alto, ancho: numero
  comenzar
    alto:= 3

    repetir alto
      juntarFlores(flores)
      BloquearEsquina(PosAv, PosCa + 1)
      mover
      LiberarEsquina(PosAv, PosCa - 1)
    
    derecha
    
    Random(ancho,3,5)
    repetir ancho
      juntarFlores(flores)
      BloquearEsquina(PosAv + 1, PosCa)
      mover
      LiberarEsquina(PosAv - 1, PosCa)
    avUlt:= PosAv
    caUlt:= PosCa
    izquierda
  fin
  
  proceso juntarFlores(ES flores: numero)
  comenzar
    mientras (HayFlorEnLaEsquina)
      tomarFlor
      flores:= flores + 1
  fin
  
  proceso juntarPapeles(ES papeles: numero)
  comenzar
    mientras(HayPapelEnLaEsquina)
      tomarPapel
      papeles:= papeles + 1
  fin
  


areas
  AreaJuez: AreaP(1, 1, 1, 1)
  
  AreaCVerde: AreaP(5, 1, 5, 49)
  AreaCAmarillo: AreaP(10, 1, 10, 49)
  AreaCRosa: AreaP(15, 1, 15, 49) 
  AreaCNegro: AreaP(20, 1, 20, 49)

  {Consideramos peores casos de ultimos para limites}
  AreaEscaladores: AreaC(5, 51, 55, 66)
  
  {Deposito de los ganadores}
  AreaDeposito: AreaPC(100, 1, 100, 1)
  
  {Deposito de los perdedores}
  AreaRestos: AreaPC(1, 50, 100, 50)
  
robots
  robot rCorredor 
  variables
    id, papeles, alto, avInicial, caInicial: numero
    ganador, corteWhile: boolean
  comenzar
    RecibirMensaje(id, juez)
    avInicial:= PosAv
    caInicial:= PosCa
    corteWhile:= V
    
    mientras ((PosCa < 50) & (corteWhile))
      juntarPapeles(papeles)
      Random(alto, 1, 5)
      si ((PosCa + alto) < 50)
        Pos(PosAv, PosCa + alto)
      sino
        corteWhile:= F
      
    Pos(avInicial,caInicial) {solucion para que no se choquen en la calle 50}

    {Avisa a compa que termino}
    si (id = 1)
      EnviarMensaje(V,escaladorVerde)
    sino
      si (id = 2)
        EnviarMensaje(V,escaladorAmarillo)
      sino
        si (id = 3)
          EnviarMensaje(V,escaladorRosa)
        sino
          EnviarMensaje(V,escaladorNegro)
          
    {ENVIO DE MENSAJES DESDE LA ESQUINA 50}
    EnviarMensaje(id, juez)
    EnviarMensaje(papeles, juez)
    
    {Juez retorna un boolean, V = proceso de ganador, F = proceso de perdedor}
    RecibirMensaje(ganador, juez)
    si (ganador)
      BloquearEsquina(100,1)
      Pos(100,1)
      mientras (papeles > 0)
        depositarPapel
        papeles := papeles - 1
      Pos(avInicial,caInicial)
      LiberarEsquina(100,1) 
    sino
      depositarPapelesPerdedorV2(papeles,avInicial,caInicial)
  fin
  
  robot rEscalador 
  variables
    id, ancho, flores,caInicial,avInicial,avUlt,caUlt: numero
    ganador,habilitado: boolean
  comenzar 
    avInicial := PosAv
    caInicial := PosCa

    {verde = 1, amarillo = 2, rosa = 3, negro = 4}
    RecibirMensaje(id, juez) {Recibe identificador del juez}
    si (id = 5)  
      RecibirMensaje(habilitado, corredorVerde) 
    sino
      si (id = 6)
        RecibirMensaje(habilitado, corredorAmarillo)
      sino
        si (id = 7) 
          RecibirMensaje(habilitado, corredorRosa)
        sino
          RecibirMensaje(habilitado, corredorNegro)     
    {Recorrido propio de escaladores}
    repetir 5
      realizarEscalon(flores,avUlt,caUlt)
    LiberarEsquina(avUlt,caUlt) {Liberamos ultima esquina de cada escalador}
       
    Pos(avInicial,caInicial)
    
    {Comunicar Flores Juntadas}
    EnviarMensaje(id, juez)
    EnviarMensaje(flores, juez)
    
    {Juez retorna un boolean, V = proceso de ganador, F = proceso de perdedor}
    RecibirMensaje(ganador, juez)
    si (ganador)
      BloquearEsquina(100,1)
      Pos(100,1)
      mientras (flores > 0)
        depositarFlor
        flores := flores - 1
      Pos(avInicial,caInicial)
      LiberarEsquina(100,1)
      
    sino
      depositarFloresPerdedorV2(flores,avInicial,caInicial)
     
  fin
  
  robot rJuez
  variables
    maxFlores, maxFloresId, maxPapeles, maxPapelesId, id, flores, papeles: numero
  comenzar
   {Etapa 1: Envio de identificadores a los robots}
    EnviarMensaje(1, corredorVerde)
    EnviarMensaje(2, corredorAmarillo)
    EnviarMensaje(3, corredorRosa)
    EnviarMensaje(4, corredorNegro)
    
    EnviarMensaje(5, escaladorVerde)
    EnviarMensaje(6, escaladorAmarillo)
    EnviarMensaje(7, escaladorRosa)
    EnviarMensaje(8, escaladorNegro)
    
    {Etapa 2: Procesamiento de flores(escaladores) y papeles(corredores) para determinar ganadores y perdedores}
    repetir 8 
      RecibirMensaje (id, *)
      si (id = 1) 
        RecibirMensaje(papeles, corredorVerde)
        si (papeles > maxPapeles) 
          maxPapeles:= papeles
          maxPapelesId:= id
      sino 
        si (id = 2) 
          RecibirMensaje(papeles, corredorAmarillo)
          si (papeles > maxPapeles) 
            maxPapeles:= papeles
            maxPapelesId:= id

        sino
          si (id = 3)
            RecibirMensaje(papeles, corredorRosa)
            si (papeles > maxPapeles) 
              maxPapeles:= papeles
              maxPapelesId:= id
          sino
            si (id = 4)
              RecibirMensaje(papeles, corredorNegro)
              si (papeles > maxPapeles) 
                maxPapeles:= papeles
                maxPapelesId:= id
            sino
              si (id = 5)
                RecibirMensaje(flores, escaladorVerde)
                si (flores > maxFlores)
                  maxFlores := flores
                  maxFloresId := id
                sino
                  si (id = 6)
                    RecibirMensaje(flores, escaladorAmarillo)
                    si (flores > maxFlores)
                      maxFlores := flores
                      maxFloresId := id
                    sino
                      si (id = 7)
                        RecibirMensaje(flores, escaladorRosa)
                        si (flores > maxFlores)
                          maxFlores := flores
                          maxFloresId := id
                        sino
                          si (id = 8)
                            RecibirMensaje(flores, escaladorNegro)
                            si (flores > maxFlores)
                              maxFlores := flores
                              maxFloresId := id
                              
    {Etapa 3: Aviso a ganadores y perdedores para que realizen las tareas correspondientes}
    {corredores}
    si (maxPapelesId = 1)
      EnviarMensaje(V, corredorVerde)
      EnviarMensaje(F, corredorAmarillo)
      EnviarMensaje(F, corredorRosa)
      EnviarMensaje(F, corredorNegro)
    sino
      si (maxPapelesId = 2)
        EnviarMensaje(F, corredorVerde)
        EnviarMensaje(V, corredorAmarillo)
        EnviarMensaje(F, corredorRosa)
        EnviarMensaje(F, corredorNegro)
      sino
        si (maxPapelesId = 3)
          EnviarMensaje(F, corredorVerde)
          EnviarMensaje(F, corredorAmarillo)
          EnviarMensaje(V, corredorRosa)
          EnviarMensaje(F, corredorNegro)
        sino
          EnviarMensaje(F, corredorVerde)
          EnviarMensaje(F, corredorAmarillo)
          EnviarMensaje(F, corredorRosa)
          EnviarMensaje(V, corredorNegro)
    {escaladores}
    si (maxFloresId = 5)
      EnviarMensaje(V, escaladorVerde)
      EnviarMensaje(F, escaladorAmarillo)
      EnviarMensaje(F, escaladorRosa)
      EnviarMensaje(F, escaladorNegro)
    sino
      si (maxFloresId = 6)
        EnviarMensaje(F, escaladorVerde)
        EnviarMensaje(V, escaladorAmarillo)
        EnviarMensaje(F, escaladorRosa)
        EnviarMensaje(F, escaladorNegro)
      sino
        si (maxFloresId = 7)
          EnviarMensaje(F, escaladorVerde)
          EnviarMensaje(F, escaladorAmarillo)
          EnviarMensaje(V, escaladorRosa)
          EnviarMensaje(F, escaladorNegro)
        sino
          EnviarMensaje(F, escaladorVerde)
          EnviarMensaje(F, escaladorAmarillo)
          EnviarMensaje(F, escaladorRosa)
          EnviarMensaje(V, escaladorNegro) 
  fin 


variables
  corredorVerde: rCorredor 
  corredorAmarillo: rCorredor 
  corredorRosa: rCorredor 
  corredorNegro: rCorredor 
  escaladorVerde: rEscalador 
  escaladorAmarillo: rEscalador 
  escaladorRosa: rEscalador 
  escaladorNegro: rEscalador
  juez: rJuez
  
comenzar 
  AsignarArea(juez, AreaJuez)

  AsignarArea(corredorVerde, AreaCVerde)
  AsignarArea(corredorAmarillo, AreaCAmarillo)
  AsignarArea(corredorRosa, AreaCRosa)
  AsignarArea(corredorNegro, AreaCNegro)

  AsignarArea(escaladorVerde, AreaEscaladores)
  AsignarArea(escaladorAmarillo, AreaEscaladores)
  AsignarArea(escaladorRosa, AreaEscaladores)
  AsignarArea(escaladorNegro, AreaEscaladores)

  AsignarArea(corredorVerde, AreaRestos)
  AsignarArea(corredorAmarillo, AreaRestos)
  AsignarArea(corredorRosa, AreaRestos)
  AsignarArea(corredorNegro, AreaRestos)

  AsignarArea(escaladorVerde, AreaRestos)
  AsignarArea(escaladorAmarillo, AreaRestos)
  AsignarArea(escaladorRosa, AreaRestos)
  AsignarArea(escaladorNegro, AreaRestos)

  AsignarArea(corredorVerde, AreaDeposito)
  AsignarArea(corredorAmarillo, AreaDeposito)
  AsignarArea(corredorRosa, AreaDeposito)
  AsignarArea(corredorNegro, AreaDeposito)

  AsignarArea(escaladorVerde, AreaDeposito)
  AsignarArea(escaladorAmarillo, AreaDeposito)
  AsignarArea(escaladorRosa, AreaDeposito)
  AsignarArea(escaladorNegro, AreaDeposito)

  
  Iniciar(juez, 1, 1) 
  
  Iniciar(corredorVerde, 5, 1)
  Iniciar(corredorAmarillo, 10, 1)
  Iniciar(corredorRosa, 15, 1)
  Iniciar(corredorNegro, 20, 1)
  
  Iniciar(escaladorVerde, 5, 51)
  Iniciar(escaladorAmarillo, 10, 51)
  Iniciar(escaladorRosa, 15, 51)
  Iniciar(escaladorNegro, 20, 51)

fin


